{"ast":null,"code":"import { map } from 'rxjs/internal/operators/map';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass DonnationService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = 'http://localhost:8000/api/donnations';\n    this.categoryUrl = 'http://localhost:8000/api/donnation-category';\n  }\n  getDonnationList(theCategoryId) {\n    if (theCategoryId === 0) {\n      return this.httpClient.get(this.baseUrl).pipe(map(response => response._embedded.donnations));\n    } else {\n      const searchUrl = `${this.baseUrl}/search/findByCategoryId?id=${theCategoryId}`;\n      return this.getDonnations(searchUrl);\n    }\n  }\n  getDonnationCategories() {\n    return this.httpClient.get(this.categoryUrl).pipe(map(response => response._embedded.donnationCategory));\n  }\n  searchDonnations(theKeyword) {\n    const searchUrl = `${this.baseUrl}/search/findByNameContaining?name=${theKeyword}`;\n    return this.getDonnations(searchUrl);\n  }\n  getDonnations(searchUrl) {\n    return this.httpClient.get(searchUrl).pipe(map(response => response._embedded.donnations));\n  }\n  getDonnation(DonnId) {\n    const donnationUrl = `${this.baseUrl}/${DonnId}`;\n    return this.httpClient.get(donnationUrl);\n  }\n}\nDonnationService.ɵfac = function DonnationService_Factory(t) {\n  return new (t || DonnationService)(i0.ɵɵinject(i1.HttpClient));\n};\nDonnationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DonnationService,\n  factory: DonnationService.ɵfac,\n  providedIn: 'root'\n});\nexport { DonnationService };","map":{"version":3,"names":["map","DonnationService","constructor","httpClient","baseUrl","categoryUrl","getDonnationList","theCategoryId","get","pipe","response","_embedded","donnations","searchUrl","getDonnations","getDonnationCategories","donnationCategory","searchDonnations","theKeyword","getDonnation","DonnId","donnationUrl","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\pc\\OneDrive\\Desktop\\ENSIAS-2A\\s4\\cours\\JEE\\YAA-Khayer\\Frontend\\yaa-khayer-front\\src\\app\\services\\donnation.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Donnation } from '../entities/donnation';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { map } from 'rxjs/internal/operators/map';\r\nimport { DonnationCategory } from '../entities/donnation-category';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DonnationService {\r\n  \r\n  private baseUrl = 'http://localhost:8000/api/donnations';\r\n\r\n  private categoryUrl = 'http://localhost:8000/api/donnation-category';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getDonnationList(theCategoryId:number): Observable<Donnation[]>{\r\n\r\n    if(theCategoryId===0){\r\n      return this.httpClient.get<GetResponse>(this.baseUrl).pipe(\r\n        map(\r\n          response=>response._embedded.donnations));\r\n    }else{\r\n      const searchUrl =`${this.baseUrl}/search/findByCategoryId?id=${theCategoryId}`;\r\n      return this.getDonnations(searchUrl);\r\n    }\r\n    \r\n  }\r\n  getDonnationCategories() : Observable<DonnationCategory[]>{\r\n    return this.httpClient.get<GetResponseDonnationCategory>(this.categoryUrl).pipe(\r\n      map(\r\n        response=>response._embedded.donnationCategory));\r\n  }\r\n\r\n  searchDonnations(theKeyword: string): Observable<Donnation[]> {\r\n    const searchUrl = `${this.baseUrl}/search/findByNameContaining?name=${theKeyword}`!;\r\n    return this.getDonnations(searchUrl);\r\n  }\r\n\r\n\r\n  private getDonnations(searchUrl: string): Observable<Donnation[]> {\r\n    return this.httpClient.get<GetResponse>(searchUrl).pipe(\r\n      map(\r\n        response => response._embedded.donnations));\r\n  }\r\n\r\n  getDonnation(DonnId: number): Observable<Donnation> {\r\n\r\n    const donnationUrl = `${this.baseUrl}/${DonnId}`;\r\n\r\n    return this.httpClient.get<Donnation>(donnationUrl);\r\n    \r\n  }\r\n}\r\n\r\ninterface GetResponse{\r\n  _embedded:{\r\n    donnations:Donnation[]};\r\n}\r\n\r\ninterface GetResponseDonnationCategory{\r\n  _embedded:{\r\n    donnationCategory:DonnationCategory[]};\r\n}"],"mappings":"AAIA,SAASA,GAAG,QAAQ,6BAA6B;;;AAGjD,MAGaC,gBAAgB;EAM3BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAJtB,KAAAC,OAAO,GAAG,sCAAsC;IAEhD,KAAAC,WAAW,GAAG,8CAA8C;EAEtB;EAE9CC,gBAAgBA,CAACC,aAAoB;IAEnC,IAAGA,aAAa,KAAG,CAAC,EAAC;MACnB,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAc,IAAI,CAACJ,OAAO,CAAC,CAACK,IAAI,CACxDT,GAAG,CACDU,QAAQ,IAAEA,QAAQ,CAACC,SAAS,CAACC,UAAU,CAAC,CAAC;KAC9C,MAAI;MACH,MAAMC,SAAS,GAAE,GAAG,IAAI,CAACT,OAAO,+BAA+BG,aAAa,EAAE;MAC9E,OAAO,IAAI,CAACO,aAAa,CAACD,SAAS,CAAC;;EAGxC;EACAE,sBAAsBA,CAAA;IACpB,OAAO,IAAI,CAACZ,UAAU,CAACK,GAAG,CAA+B,IAAI,CAACH,WAAW,CAAC,CAACI,IAAI,CAC7ET,GAAG,CACDU,QAAQ,IAAEA,QAAQ,CAACC,SAAS,CAACK,iBAAiB,CAAC,CAAC;EACtD;EAEAC,gBAAgBA,CAACC,UAAkB;IACjC,MAAML,SAAS,GAAG,GAAG,IAAI,CAACT,OAAO,qCAAqCc,UAAU,EAAG;IACnF,OAAO,IAAI,CAACJ,aAAa,CAACD,SAAS,CAAC;EACtC;EAGQC,aAAaA,CAACD,SAAiB;IACrC,OAAO,IAAI,CAACV,UAAU,CAACK,GAAG,CAAcK,SAAS,CAAC,CAACJ,IAAI,CACrDT,GAAG,CACDU,QAAQ,IAAIA,QAAQ,CAACC,SAAS,CAACC,UAAU,CAAC,CAAC;EACjD;EAEAO,YAAYA,CAACC,MAAc;IAEzB,MAAMC,YAAY,GAAG,GAAG,IAAI,CAACjB,OAAO,IAAIgB,MAAM,EAAE;IAEhD,OAAO,IAAI,CAACjB,UAAU,CAACK,GAAG,CAAYa,YAAY,CAAC;EAErD;;AA5CWpB,gBAAgB,C;mBAAhBA,gBAAgB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBxB,gBAAgB,C;SAAhBA,gBAAgB;EAAAyB,OAAA,EAAhBzB,gBAAgB,CAAA0B,IAAA;EAAAC,UAAA,EAFf;AAAM;SAEP3B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}