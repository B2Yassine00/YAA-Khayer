{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst AUTH_API = 'http://localhost:8000/api/auth/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nclass AuthService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  login(username, password) {\n    return this.httpClient.post(AUTH_API + 'authenticate', {\n      username,\n      password\n    }, httpOptions);\n  }\n  register(username, email, role, password) {\n    return this.httpClient.post(AUTH_API + 'signin', {\n      username,\n      email,\n      role,\n      password\n    }, httpOptions);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["HttpHeaders","AUTH_API","httpOptions","headers","AuthService","constructor","httpClient","login","username","password","post","register","email","role","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\pc\\OneDrive\\Desktop\\ENSIAS-2A\\s4\\cours\\JEE\\YAA-Khayer\\Frontend\\yaa-khayer-front\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\n\r\nconst AUTH_API = 'http://localhost:8000/api/auth/';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.httpClient.post(AUTH_API + 'authenticate', {\r\n      username,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n\r\n  register(username: string, email: string,role: string ,password: string): Observable<any> {\r\n    return this.httpClient.post(AUTH_API + 'signin', {\r\n      username,\r\n      email,\r\n      role,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,MAAMC,QAAQ,GAAG,iCAAiC;AAClD,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAED,MAGaI,WAAW;EAEtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAE9CC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAACT,QAAQ,GAAG,cAAc,EAAE;MACrDO,QAAQ;MACRC;KACD,EAAEP,WAAW,CAAC;EACjB;EAEAS,QAAQA,CAACH,QAAgB,EAAEI,KAAa,EAACC,IAAY,EAAEJ,QAAgB;IACrE,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAACT,QAAQ,GAAG,QAAQ,EAAE;MAC/CO,QAAQ;MACRI,KAAK;MACLC,IAAI;MACJJ;KACD,EAAEP,WAAW,CAAC;EACjB;;AAlBWE,WAAW,C;mBAAXA,WAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXb,WAAW,C;SAAXA,WAAW;EAAAc,OAAA,EAAXd,WAAW,CAAAe,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPhB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}