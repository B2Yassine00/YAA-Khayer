{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./token-storage.service\";\nconst API_URL = \"http://localhost:8000/demo/hello\";\nclass UtilisateurService {\n  constructor(httpClient, tokenStorage) {\n    this.httpClient = httpClient;\n    this.tokenStorage = tokenStorage;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/text',\n        'Authorization': 'Bearer ' + this.tokenStorage.getToken()\n      })\n    };\n  }\n  getPublicContent() {\n    console.log(this.tokenStorage.getToken());\n    console.log(this.tokenStorage.getUser());\n    return this.httpClient.get(API_URL, this.httpOptions);\n  }\n}\nUtilisateurService.ɵfac = function UtilisateurService_Factory(t) {\n  return new (t || UtilisateurService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenStorageService));\n};\nUtilisateurService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UtilisateurService,\n  factory: UtilisateurService.ɵfac,\n  providedIn: 'root'\n});\nexport { UtilisateurService };","map":{"version":3,"names":["HttpHeaders","API_URL","UtilisateurService","constructor","httpClient","tokenStorage","httpOptions","headers","getToken","getPublicContent","console","log","getUser","get","i0","ɵɵinject","i1","HttpClient","i2","TokenStorageService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\pc\\OneDrive\\Desktop\\ENSIAS-2A\\s4\\cours\\JEE\\YAA-Khayer\\Frontend\\yaa-khayer-front\\src\\app\\services\\utilisateur.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { TokenStorageService } from './token-storage.service';\r\n\r\nconst API_URL = \"http://localhost:8000/demo/hello\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilisateurService {\r\n\r\n  constructor(private httpClient: HttpClient,\r\n              private tokenStorage: TokenStorageService) { }\r\n\r\n  httpOptions = {\r\n                headers: new HttpHeaders({'Content-Type': 'application/text', 'Authorization': 'Bearer '+ this.tokenStorage.getToken()})\r\n              };\r\n\r\n  getPublicContent(): Observable<any> {\r\n    console.log(this.tokenStorage.getToken());\r\n    console.log(this.tokenStorage.getUser());\r\n\r\n    return this.httpClient.get(API_URL,this.httpOptions);\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAK9D,MAAMC,OAAO,GAAG,kCAAkC;AAGlD,MAGaC,kBAAkB;EAE7BC,YAAoBC,UAAsB,EACtBC,YAAiC;IADjC,KAAAD,UAAU,GAAVA,UAAU;IACV,KAAAC,YAAY,GAAZA,YAAY;IAEhC,KAAAC,WAAW,GAAG;MACAC,OAAO,EAAE,IAAIP,WAAW,CAAC;QAAC,cAAc,EAAE,kBAAkB;QAAE,eAAe,EAAE,SAAS,GAAE,IAAI,CAACK,YAAY,CAACG,QAAQ;MAAE,CAAC;KACxH;EAJ4C;EAMzDC,gBAAgBA,CAAA;IACdC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,YAAY,CAACG,QAAQ,EAAE,CAAC;IACzCE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,YAAY,CAACO,OAAO,EAAE,CAAC;IAExC,OAAO,IAAI,CAACR,UAAU,CAACS,GAAG,CAACZ,OAAO,EAAC,IAAI,CAACK,WAAW,CAAC;EACtD;;AAdWJ,kBAAkB,C;mBAAlBA,kBAAkB,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,mBAAA;AAAA;AAAlBjB,kBAAkB,C;SAAlBA,kBAAkB;EAAAkB,OAAA,EAAlBlB,kBAAkB,CAAAmB,IAAA;EAAAC,UAAA,EAFjB;AAAM;SAEPpB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}